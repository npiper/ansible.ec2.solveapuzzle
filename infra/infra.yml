---
# AWS tasks are run 'locally'

# Authentication details should be passed in as arguments or exported in the shell before running this playbook
# Ideally they should be stored in Hashicorp's 'Vault'
# e.g.
# export AWS_ACCESS_KEY_ID='my-access-key123'
# export AWS_SECRET_ACCESS_KEY='sekrit23418'
#
# Run with `ansible-playbook -i testing infra.yml`

## Create a VPC - non default
- name: CREATE AWS ENVIRONMENT
  hosts: localhost
  connection: local
  gather_facts: False

  tasks:
    - name: Create VPC
      ec2_vpc_net:
       name: vpc-{{ domain_name }}
       cidr_block: 10.0.0.0/16
       region: "{{ aws_region }}"
       dns_support: true
       dns_hostnames: true
       tags:
         module: ansible ec2_vpc_net
         domain_name: "{{ domain_name }}"
         context: "{{ context }}"
       tenancy: default
       state: present
      register: avpc

      # We now use the set_fact module
# to save the id of the VPC in a new variable.

    - name:               Set VPC ID in variable
      set_fact:
        vpc_id:           "{{ avpc.vpc.id }}"

## PUBLIC - ZONING ##

# Every VPC needs at least one Internet Gateway.
# This component allows traffic between the VPC and the outside world.

    - name:               Create Internet Gateway for VPC
      ec2_vpc_igw:
        vpc_id:           "{{ vpc_id }}"
        region:           "{{ aws_region }}"
        tags:
         Name: "{{ context }} Internet Gateway"
         module: ansible ec2_vpc_igw
         domain_name: "{{ domain_name }}"
         context: "{{ context }}"
        state:            "present"
      register: vpc_igw

    - name: Set Internet Gateway ID in variable
      set_fact:
           igw_id: "{{ vpc_igw.gateway_id }}"

## Public Facing Subnet

    - name: Create Public subnet for App Servers in 1a
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        region: "{{ aws_region }}"
        cidr: 10.0.0.0/28
        az: "{{ aws_region }}a"
        resource_tags:
          Name: App Subnet 1A
          zone: public
          context: "{{ context }}"
          threat: high
        state: present
      register: public_subnet_1a

    - name: Set Public Subnet ID in variable
      set_fact:
        public_subnet1a_id: "{{ public_subnet_1a.subnet.id }}"


    - name: Set up public subnet route table for Internet Traffic
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        region: "{{ aws_region }}"
        purge_routes: true
        purge_subnets: true
        state: present
        tags:
          Name: "Public Route Table"
          context: "{{ context }}"
          zone: public
          threat: high
        subnets:
          - "{{ public_subnet1a_id }}"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ igw_id }}"

## DMZ - GATEWAY Servers

    - name: Create new NAT gateway in Public subnet AZ1a
      ec2_vpc_nat_gateway:
        state: present
        region: "{{ aws_region }}"
        subnet_id: "{{ public_subnet1a_id }}"
        wait: yes
        if_exist_do_not_create: true
        wait: true
      register: nat_gateway_1a

    - name: Set AZ1a Nat Gateway ID in variable
      set_fact:
        nat_gateway_id: "{{ nat_gateway_1a.nat_gateway_id }}"

### PRIVATE ZONE - Only comms to/from Internet via DMZ NAT Gateway or Egress

    - name: Create Private subnet for Servers in 1a
      ec2_vpc_subnet:
        vpc_id: "{{ vpc_id }}"
        region: "{{ aws_region }}"
        cidr: 10.0.1.0/28
        az: "{{ aws_region }}a"
        resource_tags:
          Name: Private Subnet 1A
          zone: private
          context: "{{ context }}"
          threat: low
        state: present
      register: private_subnet_1a

    - name: Set Private Subnet ID in variable
      set_fact:
         private_subnet_id: "{{ private_subnet_1a.subnet.id }}"

    - name: Set up private subnet route table
      ec2_vpc_route_table:
        vpc_id: "{{ vpc_id }}"
        region: "{{ aws_region }}"
        tags:
          Name: "Private Route table to NAT Gateway"
          context: "{{ context }}"
          zone: dmz
          threat: high
        subnets:
           - "{{ private_subnet_id }}"
        routes:
          - dest: "0.0.0.0/0"
            gateway_id: "{{ nat_gateway_id }}"
